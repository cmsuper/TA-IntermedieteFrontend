(()=>{var t={19:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.shadowRoot.querySelector("form").addEventListener("submit",(t=>this.addNote(t)))}async addNote(t){t.preventDefault();const n=this.shadowRoot.querySelector("#title").value,e=this.shadowRoot.querySelector("#body").value;try{const t=await fetch("https://notes-api.dicoding.dev/v2/notes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({title:n,body:e})});"success"===(await t.json()).status&&(document.dispatchEvent(new Event("note-added")),this.shadowRoot.querySelector("#title").value="",this.shadowRoot.querySelector("#body").value="")}catch(t){console.error("Error adding note:",t)}}render(){this.shadowRoot.innerHTML='\n            <form>\n                <input type="text" id="title" placeholder="Title" required />\n                <textarea id="body" placeholder="Note Content" required></textarea>\n                <button type="submit">Add Note</button>\n            </form>\n        '}}customElements.define("note-form",t)},56:(t,n,e)=>{"use strict";t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},72:t=>{"use strict";var n=[];function e(t){for(var e=-1,o=0;o<n.length;o++)if(n[o].identifier===t){e=o;break}return e}function o(t,o){for(var a={},i=[],s=0;s<t.length;s++){var c=t[s],d=o.base?c[0]+o.base:c[0],u=a[d]||0,l="".concat(d," ").concat(u);a[d]=u+1;var p=e(l),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(h);else{var f=r(h,o);o.byIndex=s,n.splice(s,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,r){var a=o(t=t||[],r=r||{});return function(t){t=t||[];for(var i=0;i<a.length;i++){var s=e(a[i]);n[s].references--}for(var c=o(t,r),d=0;d<a.length;d++){var u=e(a[d]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=c}}},113:t=>{"use strict";t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},130:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return["id","title","body","created-at"]}attributeChangedCallback(t,n,e){n!==e&&this.render()}connectedCallback(){this.render()}async deleteNote(){const t=this.getAttribute("id");try{const n=await fetch(`https://notes-api.dicoding.dev/v2/notes/${t}`,{method:"DELETE"});"success"===(await n.json()).status&&this.remove()}catch(t){console.error("Error deleting note:",t)}}render(){this.shadowRoot.innerHTML=`\n            <style>\n                .note {\n                    background: white;\n                    padding: 15px;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n                    margin: 10px 0;\n                    position: relative;\n                }\n                h3 { margin: 0; font-size: 18px; }\n                p { font-size: 14px; color: #555; }\n                .date { font-size: 12px; color: #777; }\n                button {\n                    position: absolute;\n                    top: 10px;\n                    right: 10px;\n                    background: red;\n                    color: white;\n                    border: none;\n                    padding: 5px;\n                    cursor: pointer;\n                }\n            </style>\n            <div class="note">\n                <h3>${this.getAttribute("title")||"Untitled"}</h3>\n                <p>${this.getAttribute("body")||"No content"}</p>\n                <p class="date">Created at: ${this.getAttribute("created-at")||"Unknown"}</p>\n                <button id="delete-btn">Delete</button>\n            </div>\n        `,this.shadowRoot.querySelector("#delete-btn").addEventListener("click",(()=>this.deleteNote()))}}customElements.define("note-item",t)},159:(t,n,e)=>{"use strict";e.d(n,{A:()=>s});var o=e(601),r=e.n(o),a=e(314),i=e.n(a)()(r());i.push([t.id,"body {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    display: grid;\n    flex-direction: column;\n    align-items: center;\n    background-color: #f5f5f5;\n}\n\nheader {\n    width: 100%;\n    background-color: #6200ea;\n    color: white;\n    text-align: center;\n    padding: 1rem 0;\n    font-size: 1.5rem;\n}\n\nmain {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n    grid-template-columns: repeat(2, 1fr); /* Membuat dua kolom */\n    width: 80%;\n    margin-top: 20px;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    max-width: 400px;\n    margin: 20px auto; /* Agar form ada di tengah */\n    background: #fff;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\ninput, textarea {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;\n}\n\ntextarea {\n    min-height: 100px; /* Supaya lebih nyaman saat mengetik */\n    resize: vertical; /* Bisa diubah ukurannya */\n}\n\nbutton {\n    background-color: #6200ea;\n    color: white;\n    padding: 10px;\n    border: none;\n    border-radius: 5px;\n    font-size: 16px;\n    cursor: pointer;\n    transition: 0.3s;\n}\n\nbutton:hover {\n    background-color: #3700b3;\n}\n\nbutton:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n}\n\nnote-form, note-list {\n    width: 100%;\n}\n\n.error-message {\n    color: red;\n    font-size: 12px;\n    margin-top: 5px;\n    display: block;\n}\n\n#submitButton:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n}\n\n#notification {\n    position: fixed;\n    top: 10px;\n    right: 10px;\n    background-color: #4CAF50;\n    color: white;\n    padding: 10px 20px;\n    border-radius: 5px;\n    opacity: 0;\n    transition: opacity 0.5s ease-in-out;\n}\n\n#notification.show {\n    opacity: 1;\n}\n\n.hidden {\n    display: none;\n}\n\n#success-message {\n    position: fixed;\n    top: 10px;\n    left: 50%;\n    transform: translateX(-50%);\n    background-color: #4CAF50;\n    color: white;\n    padding: 12px 20px;\n    border-radius: 5px;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n    font-size: 16px;\n    font-weight: bold;\n    opacity: 0;\n    transition: opacity 0.5s ease-in-out;\n}\n\n#success-message.show {\n    opacity: 1;\n}\n\n#success-message.hidden {\n    opacity: 0;\n}\n\nfooter {\n    width: 100%;\n    background-color: #6200ea;\n    color: white;\n    text-align: center;\n    padding: 10px 0;\n    bottom: 0;\n    left: 0;\n}\n\nfooter p {\n    margin: 0;\n    font-size: 14px;\n}\n",""]);const s=i},314:t=>{"use strict";t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",o=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),o&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),o&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,o,r,a){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<t.length;d++){var u=[].concat(t[d]);o&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),e&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=e):u[2]=e),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),n.push(u))}},n}},417:()=>{class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this._notes=[]}async fetchNotes(){try{const t=await fetch("https://notes-api.dicoding.dev/v2/notes"),n=await t.json();"success"===n.status&&(this.notes=n.data)}catch(t){console.error("Error fetching notes:",t)}}set notes(t){this._notes=t,this.render()}render(){this.shadowRoot.innerHTML="",this._notes.forEach((t=>{const n=document.createElement("note-item");n.setAttribute("title",t.title),n.setAttribute("body",t.body),n.setAttribute("created-at",t.createdAt),this.shadowRoot.appendChild(n)}))}connectedCallback(){this.fetchNotes()}}customElements.define("note-list",t)},540:t=>{"use strict";t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},601:t=>{"use strict";t.exports=function(t){return t[1]}},659:t=>{"use strict";var n={};t.exports=function(t,e){var o=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var r=void 0!==e.layer;r&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,r&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}}},n={};function e(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return t[o](a,a.exports,e),a.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{"use strict";var t=e(72),n=e.n(t),o=e(825),r=e.n(o),a=e(659),i=e.n(a),s=e(56),c=e.n(s),d=e(540),u=e.n(d),l=e(113),p=e.n(l),h=e(159),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=u(),n()(h.A,f),h.A&&h.A.locals&&h.A.locals,e(417),e(130),e(19),document.addEventListener("note-added",(()=>{document.querySelector("note-list").fetchNotes()}))})()})();